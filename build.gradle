plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}


compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web' //스프링 부트
    compileOnly 'org.projectlombok:lombok'                             //룸복
    annotationProcessor 'org.projectlombok:lombok' //룸복
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // 스프링부트 테스터
    runtimeOnly 'com.mysql:mysql-connector-j' // sql
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA [application.properties] 필수
    implementation 'org.springframework.boot:spring-boot-starter-security' // 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // oauth2
}

tasks.named('test') {
    useJUnitPlatform()
}

//------------------------------------------------------------------

/* 스프링부트 빌드시 리액트도 같이 빌드  */
def frontendDir = "$projectDir/src/main/frontend" // 리액트 프로젝트 폴더 경로
// $는 형재프로젝트, "$projectDir/src/main/{리액트 프로젝트 명}"

sourceSets { // 리액트 실행후 빌드된 파일을 적재할 경로 설정
    main {
        // 해당경로가 스프링이 view 매핑하는 기본경로 이기 떄문
        resources { srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

//빌드된 리액트 파일을 복사해서 위에서 설정한 경로에 저장
processResources { dependsOn "copyReactBuildFiles" }

//리액트 npm 설치
task installReact(type: Exec) { // 리액트[npm] 없으면 자동 설치, 있으면 업데이트
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install' }
    else {
        commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
    }
}

task buildReact(type: Exec) { // 리액트 빌드[실행] npm start
    dependsOn "installReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {
        commandLine "npm", "run-script", "build"
    }
}

task copyReactBuildFiles(type: Copy) { //리액트 빌드후 파일을 스프링[resoures]
    from "$frontendDir/build"
    into "$projectDir/src/main/resources/static"
}